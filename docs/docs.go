// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-06-06 00:09:36.991503145 +0800 CST m=+0.036594799

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "contact": {},
        "license": {}
    },
    "paths": {
        "/login": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Login generates the authentication token",
                "parameters": [
                    {
                        "description": "Username",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "description": "Password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1MjgwMTY5MjIsImlkIjowLCJuYmYiOjE1MjgwMTY5MjIsInVzZXJuYW1lIjoiYWRtaW4ifQ.LjxrK9DuAwAzUD8-9v43NzWBN7HXsSLfebw92DKd1JQ\"}}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sd/cpu": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Checks the cpu usage",
                "responses": {
                    "200": {
                        "description": "CRITICAL - Load average: 1.78, 1.99, 2.02 | Cores: 2",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sd/disk": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Checks the disk usage",
                "responses": {
                    "200": {
                        "description": "OK - Free space: 17233MB (16GB) / 51200MB (50GB) | Used: 33%",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sd/health": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Shows OK as the ping-pong result",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sd/ram": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Checks the ram usage",
                "responses": {
                    "200": {
                        "description": "OK - Free space: 402MB (0GB) / 8192MB (8GB) | Used: 4%",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "List the users in the database",
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"totalCount\":1,\"userList\":[{\"id\":0,\"username\":\"admin\",\"sayHello\":\"Hello EnqntiSig\",\"password\":\"$2a$10$veGcArz47VGj7l9xN7g2iuT9TF21jLI1YGXarGzvARNdnt4inC9PG\",\"createdAt\":\"2018-05-28 00:25:33\",\"updatedAt\":\"2018-05-28 00:25:33\"}]}}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Add new user to the database",
                "parameters": [
                    {
                        "default": "\"kong1\"",
                        "description": "Username",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "default": "\"kong1234\"",
                        "description": "Password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"username\":\"kong\"}}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete an user by the user identifier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The user's database id index num",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":200,\"data\":{\"lists\":[{\"id\":3,\"created_on\":1516849721,\"modified_on\":0,\"name\":\"3333\",\"created_by\":\"4555\",\"modified_by\":\"\",\"state\":0}],\"total\":29},\"msg\":\"ok\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user/{username}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get an user by the user identifier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"username\":\"kong\",\"password\":\"$2a$10$E0kwtmtLZbwW/bDQ8qI8e.eHPqhQOW9tvjwpyo/p05f/f4Qvr3OmS\"}}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/{id}": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "Update a user info by the user identifier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The usr identifier",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Username",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "description": "Password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":null}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
